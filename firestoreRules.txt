rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
        match /{document=**} {
      allow read, write: if false;
    }
    // Allow authenticated users to read and write user data
    match /users/{userId} {
      allow get: if request.auth != null;

      allow list: if request.auth != null;

      allow update, delete: if request.auth != null && request.auth.uid == userId;

      allow create: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/favorites/{listingId} {
    	allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/cart/{listingId} {
    	allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /listings/{listingId} {
      allow read: if true;

      allow write: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
    }
    match /users/{userId}/listings/{listingId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
    }
    match /notifications/{notificationId} {
  		allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
		}
    
    match /status/{userId} {
    	allow read: if request.auth != null;
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

		match /notifications/{document=**} {
  		allow list: if request.auth != null;
		}
    
		match /conversations/{conversationId} {
      
      allow read: if request.auth != null
        && request.auth.uid in resource.data.participants;
      
      allow create: if request.auth != null;
      
      allow update: if request.auth != null
        && request.auth.uid in resource.data.participants;
      
      allow delete: if false;

      match /messages/{messageId} {
        
        allow read: if request.auth != null
          && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;

        allow create: if request.auth != null
          && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        
        allow update, delete: if false;
      }
    }
  }
}